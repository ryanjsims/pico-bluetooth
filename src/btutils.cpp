#include "btutils.h"

#include <btstack.h>
#include <stdio.h>
#include "logger.h"

void dump_packet(uint8_t* packet, uint16_t size) {
    uint8_t event = hci_event_packet_get_type(packet);
    uint8_t subevent;
    switch(event){
        case BTSTACK_EVENT_STATE:
            debug("BTStack event state: %s\n",
                bt_strhcistate(btstack_event_state_get_state(packet))
            );
            break;
        case GAP_EVENT_DEDICATED_BONDING_COMPLETED:
            debug("GAP Dedicated Bonding complete, status %s\n", 
                bt_strerror(gap_event_dedicated_bonding_completed_get_status(packet))
            );
            break;
        case HCI_EVENT_CONNECTION_COMPLETE:
            debug("HCI connection complete:\n    status %s\n    handle 0x%04x\n    encrypted? %s\n    link type %s\n",
                bt_strerror(hci_event_connection_complete_get_status(packet)),
                hci_event_connection_complete_get_connection_handle(packet),
                hci_event_connection_complete_get_encryption_enabled(packet) ? "true" : "false",
                bt_strlinktype(hci_event_connection_complete_get_link_type(packet))
            );
            break;
        case HCI_EVENT_IO_CAPABILITY_RESPONSE:{
            bd_addr_t addr;
            hci_event_io_capability_response_get_bd_addr(packet, addr);
            debug("HCI IO capability response:\n    address %s\n    io capability %s\n    oob data present %s\n    auth reqs %s\n",
                bd_addr_to_str(addr),
                bt_striocap(hci_event_io_capability_response_get_io_capability(packet)),
                hci_event_io_capability_response_get_oob_data_present(packet) ? "true" : "false",
                bt_strauthreq(hci_event_io_capability_response_get_authentication_requirements(packet))
            );
            break;
        }
        case HCI_EVENT_SIMPLE_PAIRING_COMPLETE:
            debug("HCI simple pairing complete:\n    status %s\n",
                bt_strerror(hci_event_simple_pairing_complete_get_status(packet))
            );
            break;
        case HCI_EVENT_USER_CONFIRMATION_REQUEST:{
            bd_addr_t addr;
            hci_event_user_confirmation_request_get_bd_addr(packet, addr);
            debug("HCI user confirmation request:\n    address %s\n    numeric value %d\n",
                bd_addr_to_str(addr),
                hci_event_user_confirmation_request_get_numeric_value(packet)
            );
            break;
        }
        case HCI_EVENT_COMMAND_STATUS:
            debug("HCI command status:\n    status %s\n    # packets %d\n    opcode %s\n",
                bt_strerror(hci_event_command_status_get_status(packet)),
                hci_event_command_status_get_num_hci_command_packets(packet),
                bt_stropcode(hci_event_command_status_get_command_opcode(packet))
            );
            break;
        case HCI_EVENT_COMMAND_COMPLETE:{
            debug("HCI command complete:\n    # packets %d\n    opcode %s\n    return parameters\n",
                hci_event_command_complete_get_num_hci_command_packets(packet),
                bt_stropcode(hci_event_command_complete_get_command_opcode(packet))
            );
            const uint8_t* data = hci_event_command_complete_get_return_parameters(packet);
            for(uint i = 0; i < size - 4; i++) {
                debug("        0x%02x\n", data[i]);
            }
            break;
        }
        case GAP_EVENT_PAIRING_COMPLETE:{
            bd_addr_t addr;
            gap_event_pairing_complete_get_bd_addr(packet, addr);
            debug("GAP pairing complete:\n    status %s\n    handle 0x%04x\n    address %s\n",
                bt_strerror(gap_event_pairing_complete_get_status(packet)),
                gap_event_pairing_complete_get_con_handle(packet),
                bd_addr_to_str(addr)
            );
            break;
        }
        case HCI_EVENT_HID_META:
            subevent = hci_event_hid_meta_get_subevent_code(packet);
            switch(subevent) {
                default:
                    debug("Got hid meta subevent %s\n", bt_strhidsubevent(subevent));
                    break;
            }
            break;
        case L2CAP_EVENT_INCOMING_CONNECTION:{
            bd_addr_t addr;
            l2cap_event_incoming_connection_get_address(packet, addr);
            debug("Incoming L2CAP connection:\n    address %s\n    handle 0x%04x\n    PSM %s\n    local CID 0x%04x\n    remote CID 0x%04x\n",
                bd_addr_to_str(addr),
                l2cap_event_incoming_connection_get_handle(packet),
                bt_strpsm(l2cap_event_incoming_connection_get_psm(packet)),
                l2cap_event_incoming_connection_get_local_cid(packet),
                l2cap_event_incoming_connection_get_remote_cid(packet)
            );
            break;
        }
        default:{
            debug("Got event %s\n", bt_strevent(event));
            int i = 0;
            for(i; i < size; i++) {
                debug_cont("0x%02x ", packet[i]);
                if(i % 16 == 15) {
                    debug_cont1("\n");
                } else if(i % 4 == 3) {
                    debug_cont1(" ");
                }
            }
            if(i % 16 != 15) {
                debug_cont1("\n");
            }
            break;
        }
    }
}

#define __ENUMERATE_CODE(code) \
case code:\
    return #code

const char* bt_strerror(uint8_t error_code) {
    switch(error_code) {
        __ENUMERATE_CODE(ERROR_CODE_SUCCESS);
        __ENUMERATE_CODE(ERROR_CODE_UNKNOWN_HCI_COMMAND);
        __ENUMERATE_CODE(ERROR_CODE_UNKNOWN_CONNECTION_IDENTIFIER);
        __ENUMERATE_CODE(ERROR_CODE_HARDWARE_FAILURE);
        __ENUMERATE_CODE(ERROR_CODE_PAGE_TIMEOUT);
        __ENUMERATE_CODE(ERROR_CODE_AUTHENTICATION_FAILURE);
        __ENUMERATE_CODE(ERROR_CODE_PIN_OR_KEY_MISSING);
        __ENUMERATE_CODE(ERROR_CODE_MEMORY_CAPACITY_EXCEEDED);
        __ENUMERATE_CODE(ERROR_CODE_CONNECTION_TIMEOUT);
        __ENUMERATE_CODE(ERROR_CODE_CONNECTION_LIMIT_EXCEEDED);
        __ENUMERATE_CODE(ERROR_CODE_SYNCHRONOUS_CONNECTION_LIMIT_TO_A_DEVICE_EXCEEDED);
        __ENUMERATE_CODE(ERROR_CODE_ACL_CONNECTION_ALREADY_EXISTS);
        __ENUMERATE_CODE(ERROR_CODE_COMMAND_DISALLOWED);
        __ENUMERATE_CODE(ERROR_CODE_CONNECTION_REJECTED_DUE_TO_LIMITED_RESOURCES);
        __ENUMERATE_CODE(ERROR_CODE_CONNECTION_REJECTED_DUE_TO_SECURITY_REASONS);
        __ENUMERATE_CODE(ERROR_CODE_CONNECTION_REJECTED_DUE_TO_UNACCEPTABLE_BD_ADDR);
        __ENUMERATE_CODE(ERROR_CODE_CONNECTION_ACCEPT_TIMEOUT_EXCEEDED);
        __ENUMERATE_CODE(ERROR_CODE_UNSUPPORTED_FEATURE_OR_PARAMETER_VALUE);
        __ENUMERATE_CODE(ERROR_CODE_INVALID_HCI_COMMAND_PARAMETERS);
        __ENUMERATE_CODE(ERROR_CODE_REMOTE_USER_TERMINATED_CONNECTION);
        __ENUMERATE_CODE(ERROR_CODE_REMOTE_DEVICE_TERMINATED_CONNECTION_DUE_TO_LOW_RESOURCES);
        __ENUMERATE_CODE(ERROR_CODE_REMOTE_DEVICE_TERMINATED_CONNECTION_DUE_TO_POWER_OFF);
        __ENUMERATE_CODE(ERROR_CODE_CONNECTION_TERMINATED_BY_LOCAL_HOST);
        __ENUMERATE_CODE(ERROR_CODE_REPEATED_ATTEMPTS);
        __ENUMERATE_CODE(ERROR_CODE_PAIRING_NOT_ALLOWED);
        __ENUMERATE_CODE(ERROR_CODE_UNKNOWN_LMP_PDU);
        __ENUMERATE_CODE(ERROR_CODE_UNSUPPORTED_REMOTE_FEATURE_UNSUPPORTED_LMP_FEATURE);
        __ENUMERATE_CODE(ERROR_CODE_SCO_OFFSET_REJECTED);
        __ENUMERATE_CODE(ERROR_CODE_SCO_INTERVAL_REJECTED);
        __ENUMERATE_CODE(ERROR_CODE_SCO_AIR_MODE_REJECTED);
        __ENUMERATE_CODE(ERROR_CODE_INVALID_LMP_PARAMETERS_INVALID_LL_PARAMETERS);
        __ENUMERATE_CODE(ERROR_CODE_UNSPECIFIED_ERROR);
        __ENUMERATE_CODE(ERROR_CODE_UNSUPPORTED_LMP_PARAMETER_VALUE_UNSUPPORTED_LL_PARAMETER_VALUE);
        __ENUMERATE_CODE(ERROR_CODE_ROLE_CHANGE_NOT_ALLOWED);
        __ENUMERATE_CODE(ERROR_CODE_LMP_RESPONSE_TIMEOUT_LL_RESPONSE_TIMEOUT);
        __ENUMERATE_CODE(ERROR_CODE_LMP_ERROR_TRANSACTION_COLLISION);
        __ENUMERATE_CODE(ERROR_CODE_LMP_PDU_NOT_ALLOWED);
        __ENUMERATE_CODE(ERROR_CODE_ENCRYPTION_MODE_NOT_ACCEPTABLE);
        __ENUMERATE_CODE(ERROR_CODE_LINK_KEY_CANNOT_BE_CHANGED);
        __ENUMERATE_CODE(ERROR_CODE_REQUESTED_QOS_NOT_SUPPORTED);
        __ENUMERATE_CODE(ERROR_CODE_INSTANT_PASSED);
        __ENUMERATE_CODE(ERROR_CODE_PAIRING_WITH_UNIT_KEY_NOT_SUPPORTED);
        __ENUMERATE_CODE(ERROR_CODE_DIFFERENT_TRANSACTION_COLLISION);
        case 0x31:
        case 0x33:
        __ENUMERATE_CODE(ERROR_CODE_RESERVED);
        __ENUMERATE_CODE(ERROR_CODE_QOS_UNACCEPTABLE_PARAMETER);
        __ENUMERATE_CODE(ERROR_CODE_QOS_REJECTED);
        __ENUMERATE_CODE(ERROR_CODE_CHANNEL_CLASSIFICATION_NOT_SUPPORTED);
        __ENUMERATE_CODE(ERROR_CODE_INSUFFICIENT_SECURITY);
        __ENUMERATE_CODE(ERROR_CODE_PARAMETER_OUT_OF_MANDATORY_RANGE);
        __ENUMERATE_CODE(ERROR_CODE_ROLE_SWITCH_PENDING);
        __ENUMERATE_CODE(ERROR_CODE_RESERVED_SLOT_VIOLATION);
        __ENUMERATE_CODE(ERROR_CODE_ROLE_SWITCH_FAILED);
        __ENUMERATE_CODE(ERROR_CODE_EXTENDED_INQUIRY_RESPONSE_TOO_LARGE);
        __ENUMERATE_CODE(ERROR_CODE_SECURE_SIMPLE_PAIRING_NOT_SUPPORTED_BY_HOST);
        __ENUMERATE_CODE(ERROR_CODE_HOST_BUSY_PAIRING);
        __ENUMERATE_CODE(ERROR_CODE_CONNECTION_REJECTED_DUE_TO_NO_SUITABLE_CHANNEL_FOUND);
        __ENUMERATE_CODE(ERROR_CODE_CONTROLLER_BUSY);
        __ENUMERATE_CODE(ERROR_CODE_UNACCEPTABLE_CONNECTION_PARAMETERS);
        __ENUMERATE_CODE(ERROR_CODE_DIRECTED_ADVERTISING_TIMEOUT);
        __ENUMERATE_CODE(ERROR_CODE_CONNECTION_TERMINATED_DUE_TO_MIC_FAILURE);
        __ENUMERATE_CODE(ERROR_CODE_CONNECTION_FAILED_TO_BE_ESTABLISHED);
        __ENUMERATE_CODE(ERROR_CODE_MAC_CONNECTION_FAILED);
        __ENUMERATE_CODE(ERROR_CODE_COARSE_CLOCK_ADJUSTMENT_REJECTED_BUT_WILL_TRY_TO_ADJUST_USING_CLOCK_DRAGGING);

        __ENUMERATE_CODE(BTSTACK_CONNECTION_TO_BTDAEMON_FAILED);
        __ENUMERATE_CODE(BTSTACK_ACTIVATION_FAILED_SYSTEM_BLUETOOTH);
        __ENUMERATE_CODE(BTSTACK_ACTIVATION_POWERON_FAILED);
        __ENUMERATE_CODE(BTSTACK_ACTIVATION_FAILED_UNKNOWN);
        __ENUMERATE_CODE(BTSTACK_NOT_ACTIVATED);
        __ENUMERATE_CODE(BTSTACK_BUSY);
        __ENUMERATE_CODE(BTSTACK_MEMORY_ALLOC_FAILED);
        __ENUMERATE_CODE(BTSTACK_ACL_BUFFERS_FULL);

        __ENUMERATE_CODE(L2CAP_COMMAND_REJECT_REASON_COMMAND_NOT_UNDERSTOOD);
        __ENUMERATE_CODE(L2CAP_COMMAND_REJECT_REASON_SIGNALING_MTU_EXCEEDED);
        __ENUMERATE_CODE(L2CAP_COMMAND_REJECT_REASON_INVALID_CID_IN_REQUEST);

        __ENUMERATE_CODE(L2CAP_CONNECTION_RESPONSE_RESULT_SUCCESSFUL);
        __ENUMERATE_CODE(L2CAP_CONNECTION_RESPONSE_RESULT_PENDING);
        __ENUMERATE_CODE(L2CAP_CONNECTION_RESPONSE_RESULT_REFUSED_PSM);
        __ENUMERATE_CODE(L2CAP_CONNECTION_RESPONSE_RESULT_REFUSED_SECURITY);
        __ENUMERATE_CODE(L2CAP_CONNECTION_RESPONSE_RESULT_REFUSED_RESOURCES);
        __ENUMERATE_CODE(L2CAP_CONNECTION_RESPONSE_RESULT_ERTM_NOT_SUPPORTED);

        __ENUMERATE_CODE(L2CAP_CONNECTION_RESPONSE_RESULT_RTX_TIMEOUT);
        __ENUMERATE_CODE(L2CAP_CONNECTION_BASEBAND_DISCONNECT);
        __ENUMERATE_CODE(L2CAP_SERVICE_ALREADY_REGISTERED);
        __ENUMERATE_CODE(L2CAP_DATA_LEN_EXCEEDS_REMOTE_MTU);
        __ENUMERATE_CODE(L2CAP_SERVICE_DOES_NOT_EXIST);
        __ENUMERATE_CODE(L2CAP_LOCAL_CID_DOES_NOT_EXIST);
        __ENUMERATE_CODE(L2CAP_CONNECTION_RESPONSE_UNKNOWN_ERROR);

        __ENUMERATE_CODE(RFCOMM_MULTIPLEXER_STOPPED);
        __ENUMERATE_CODE(RFCOMM_CHANNEL_ALREADY_REGISTERED);
        __ENUMERATE_CODE(RFCOMM_NO_OUTGOING_CREDITS);
        __ENUMERATE_CODE(RFCOMM_AGGREGATE_FLOW_OFF);
        __ENUMERATE_CODE(RFCOMM_DATA_LEN_EXCEEDS_MTU);

        __ENUMERATE_CODE(HFP_REMOTE_REJECTS_AUDIO_CONNECTION);

        __ENUMERATE_CODE(SDP_HANDLE_ALREADY_REGISTERED);
        __ENUMERATE_CODE(SDP_QUERY_INCOMPLETE);
        __ENUMERATE_CODE(SDP_SERVICE_NOT_FOUND);
        __ENUMERATE_CODE(SDP_HANDLE_INVALID);
        __ENUMERATE_CODE(SDP_QUERY_BUSY);

        __ENUMERATE_CODE(ATT_HANDLE_VALUE_INDICATION_IN_PROGRESS);
        __ENUMERATE_CODE(ATT_HANDLE_VALUE_INDICATION_TIMEOUT);
        __ENUMERATE_CODE(ATT_HANDLE_VALUE_INDICATION_DISCONNECT);

        __ENUMERATE_CODE(GATT_CLIENT_NOT_CONNECTED);
        __ENUMERATE_CODE(GATT_CLIENT_BUSY);
        __ENUMERATE_CODE(GATT_CLIENT_IN_WRONG_STATE);
        __ENUMERATE_CODE(GATT_CLIENT_DIFFERENT_CONTEXT_FOR_ADDRESS_ALREADY_EXISTS);
        __ENUMERATE_CODE(GATT_CLIENT_VALUE_TOO_LONG);
        __ENUMERATE_CODE(GATT_CLIENT_CHARACTERISTIC_NOTIFICATION_NOT_SUPPORTED);
        __ENUMERATE_CODE(GATT_CLIENT_CHARACTERISTIC_INDICATION_NOT_SUPPORTED);

        __ENUMERATE_CODE(BNEP_SERVICE_ALREADY_REGISTERED);
        __ENUMERATE_CODE(BNEP_CHANNEL_NOT_CONNECTED);
        __ENUMERATE_CODE(BNEP_DATA_LEN_EXCEEDS_MTU);

        __ENUMERATE_CODE(OBEX_UNKNOWN_ERROR);
        __ENUMERATE_CODE(OBEX_CONNECT_FAILED);
        __ENUMERATE_CODE(OBEX_DISCONNECTED);
        __ENUMERATE_CODE(OBEX_NOT_FOUND);
        __ENUMERATE_CODE(OBEX_NOT_ACCEPTABLE);
        __ENUMERATE_CODE(OBEX_ABORTED);

        __ENUMERATE_CODE(MESH_ERROR_APPKEY_INDEX_INVALID);
        default:
            return "ERROR_CODE_UNKNOWN";
    }
}

const char* bt_strpacket(uint8_t packet_type) {
    switch(packet_type) {
        __ENUMERATE_CODE(HCI_COMMAND_DATA_PACKET);
        __ENUMERATE_CODE(HCI_ACL_DATA_PACKET);
        __ENUMERATE_CODE(HCI_SCO_DATA_PACKET);
        __ENUMERATE_CODE(HCI_EVENT_PACKET);
        __ENUMERATE_CODE(HCI_ISO_DATA_PACKET);
        __ENUMERATE_CODE(L2CAP_DATA_PACKET);
        __ENUMERATE_CODE(RFCOMM_DATA_PACKET);
        __ENUMERATE_CODE(ATT_DATA_PACKET);
        __ENUMERATE_CODE(SM_DATA_PACKET);
        __ENUMERATE_CODE(SDP_CLIENT_PACKET);
        __ENUMERATE_CODE(BNEP_DATA_PACKET);
        __ENUMERATE_CODE(UCD_DATA_PACKET);
        __ENUMERATE_CODE(GOEP_DATA_PACKET);
        __ENUMERATE_CODE(PBAP_DATA_PACKET);
        __ENUMERATE_CODE(AVRCP_BROWSING_DATA_PACKET);
        __ENUMERATE_CODE(MAP_DATA_PACKET);
        __ENUMERATE_CODE(BIP_DATA_PACKET);
        //__ENUMERATE_CODE(PROVISIONING_DATA_PACKET);
        __ENUMERATE_CODE(MESH_PROXY_DATA_PACKET);
        __ENUMERATE_CODE(MESH_NETWORK_PACKET);
        __ENUMERATE_CODE(MESH_BEACON_PACKET);
        __ENUMERATE_CODE(LOG_MESSAGE_PACKET);
        default:
            return "PACKET_TYPE_UNKNOWN";
    }
}

const char* bt_strpsm(uint16_t packet_type) {
    switch(packet_type) {
        __ENUMERATE_CODE(PSM_HID_CONTROL);
        __ENUMERATE_CODE(PSM_HID_INTERRUPT);
        __ENUMERATE_CODE(PSM_ATT);
        __ENUMERATE_CODE(PSM_IPSP);
        __ENUMERATE_CODE(PSM_SDP);
        __ENUMERATE_CODE(PSM_RFCOMM);
        __ENUMERATE_CODE(PSM_BNEP);
        default:
            return "PSM_UNKNOWN";
    }
}

const char* bt_strevent(uint8_t event) {
    switch(event) {
        __ENUMERATE_CODE(HCI_EVENT_NOP);
        __ENUMERATE_CODE(HCI_EVENT_INQUIRY_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_INQUIRY_RESULT);
        __ENUMERATE_CODE(HCI_EVENT_CONNECTION_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_CONNECTION_REQUEST);
        __ENUMERATE_CODE(HCI_EVENT_DISCONNECTION_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_AUTHENTICATION_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_REMOTE_NAME_REQUEST_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_ENCRYPTION_CHANGE);
        __ENUMERATE_CODE(HCI_EVENT_CHANGE_CONNECTION_LINK_KEY_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_MASTER_LINK_KEY_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_READ_REMOTE_SUPPORTED_FEATURES_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_READ_REMOTE_VERSION_INFORMATION_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_QOS_SETUP_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_COMMAND_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_COMMAND_STATUS);
        __ENUMERATE_CODE(HCI_EVENT_HARDWARE_ERROR);
        __ENUMERATE_CODE(HCI_EVENT_FLUSH_OCCURRED);
        __ENUMERATE_CODE(HCI_EVENT_ROLE_CHANGE);
        __ENUMERATE_CODE(HCI_EVENT_NUMBER_OF_COMPLETED_PACKETS);
        __ENUMERATE_CODE(HCI_EVENT_MODE_CHANGE);
        __ENUMERATE_CODE(HCI_EVENT_RETURN_LINK_KEYS);
        __ENUMERATE_CODE(HCI_EVENT_PIN_CODE_REQUEST);
        __ENUMERATE_CODE(HCI_EVENT_LINK_KEY_REQUEST);
        __ENUMERATE_CODE(HCI_EVENT_LINK_KEY_NOTIFICATION);
        __ENUMERATE_CODE(HCI_EVENT_LOOPBACK_COMMAND);
        __ENUMERATE_CODE(HCI_EVENT_DATA_BUFFER_OVERFLOW);
        __ENUMERATE_CODE(HCI_EVENT_MAX_SLOTS_CHANGED);
        __ENUMERATE_CODE(HCI_EVENT_READ_CLOCK_OFFSET_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_CONNECTION_PACKET_TYPE_CHANGED);
        __ENUMERATE_CODE(HCI_EVENT_QOS_VIOLATION);
        __ENUMERATE_CODE(HCI_EVENT_PAGE_SCAN_REPETITION_MODE_CHANGE);
        __ENUMERATE_CODE(HCI_EVENT_FLOW_SPECIFICATION_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_INQUIRY_RESULT_WITH_RSSI);
        __ENUMERATE_CODE(HCI_EVENT_READ_REMOTE_EXTENDED_FEATURES_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_SYNCHRONOUS_CONNECTION_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_SYNCHRONOUS_CONNECTION_CHANGED);
        __ENUMERATE_CODE(HCI_EVENT_SNIFF_SUBRATING);
        __ENUMERATE_CODE(HCI_EVENT_EXTENDED_INQUIRY_RESPONSE);
        __ENUMERATE_CODE(HCI_EVENT_ENCRYPTION_KEY_REFRESH_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_IO_CAPABILITY_REQUEST);
        __ENUMERATE_CODE(HCI_EVENT_IO_CAPABILITY_RESPONSE);
        __ENUMERATE_CODE(HCI_EVENT_USER_CONFIRMATION_REQUEST);
        __ENUMERATE_CODE(HCI_EVENT_USER_PASSKEY_REQUEST);
        __ENUMERATE_CODE(HCI_EVENT_REMOTE_OOB_DATA_REQUEST);
        __ENUMERATE_CODE(HCI_EVENT_SIMPLE_PAIRING_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_LINK_SUPERVISION_TIMEOUT_CHANGED);
        __ENUMERATE_CODE(HCI_EVENT_ENHANCED_FLUSH_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_USER_PASSKEY_NOTIFICATION);
        __ENUMERATE_CODE(HCI_EVENT_KEYPRESS_NOTIFICATION);
        __ENUMERATE_CODE(HCI_EVENT_REMOTE_HOST_SUPPORTED_FEATURES);
        __ENUMERATE_CODE(HCI_EVENT_LE_META);
        __ENUMERATE_CODE(HCI_EVENT_NUMBER_OF_COMPLETED_DATA_BLOCKS);
        __ENUMERATE_CODE(HCI_EVENT_ENCRYPTION_CHANGE_V2);
        __ENUMERATE_CODE(BTSTACK_EVENT_STATE);
        __ENUMERATE_CODE(BTSTACK_EVENT_NR_CONNECTIONS_CHANGED);
        __ENUMERATE_CODE(BTSTACK_EVENT_POWERON_FAILED);
        __ENUMERATE_CODE(BTSTACK_EVENT_SCAN_MODE_CHANGED);
        __ENUMERATE_CODE(DAEMON_EVENT_VERSION);
        __ENUMERATE_CODE(DAEMON_EVENT_SYSTEM_BLUETOOTH_ENABLED);
        __ENUMERATE_CODE(DAEMON_EVENT_REMOTE_NAME_CACHED);
        __ENUMERATE_CODE(DAEMON_EVENT_CONNECTION_OPENED);
        __ENUMERATE_CODE(DAEMON_EVENT_CONNECTION_CLOSED);
        __ENUMERATE_CODE(DAEMON_EVENT_L2CAP_CREDITS);
        __ENUMERATE_CODE(DAEMON_EVENT_L2CAP_SERVICE_REGISTERED);
        __ENUMERATE_CODE(DAEMON_EVENT_RFCOMM_SERVICE_REGISTERED);
        __ENUMERATE_CODE(DAEMON_EVENT_RFCOMM_PERSISTENT_CHANNEL);
        __ENUMERATE_CODE(DAEMON_EVENT_SDP_SERVICE_REGISTERED);
        __ENUMERATE_CODE(HCI_EVENT_TRANSPORT_SLEEP_MODE);
        __ENUMERATE_CODE(HCI_EVENT_TRANSPORT_USB_INFO);
        __ENUMERATE_CODE(HCI_EVENT_TRANSPORT_READY);
        __ENUMERATE_CODE(HCI_EVENT_TRANSPORT_PACKET_SENT);
        __ENUMERATE_CODE(HCI_EVENT_BIS_CAN_SEND_NOW);
        __ENUMERATE_CODE(HCI_EVENT_CIS_CAN_SEND_NOW);
        __ENUMERATE_CODE(HCI_EVENT_SCO_CAN_SEND_NOW);
        __ENUMERATE_CODE(L2CAP_EVENT_CHANNEL_OPENED);
        __ENUMERATE_CODE(L2CAP_EVENT_CHANNEL_CLOSED);
        __ENUMERATE_CODE(L2CAP_EVENT_INCOMING_CONNECTION);
        __ENUMERATE_CODE(L2CAP_EVENT_TIMEOUT_CHECK);
        __ENUMERATE_CODE(L2CAP_EVENT_CONNECTION_PARAMETER_UPDATE_REQUEST);
        __ENUMERATE_CODE(L2CAP_EVENT_CONNECTION_PARAMETER_UPDATE_RESPONSE);
        __ENUMERATE_CODE(L2CAP_EVENT_INFORMATION_RESPONSE);
        __ENUMERATE_CODE(L2CAP_EVENT_CAN_SEND_NOW);
        __ENUMERATE_CODE(L2CAP_EVENT_PACKET_SENT);
        __ENUMERATE_CODE(L2CAP_EVENT_ERTM_BUFFER_RELEASED);
        __ENUMERATE_CODE(L2CAP_EVENT_CBM_INCOMING_CONNECTION);
        __ENUMERATE_CODE(L2CAP_EVENT_CBM_CHANNEL_OPENED);
        __ENUMERATE_CODE(L2CAP_EVENT_TRIGGER_RUN);
        __ENUMERATE_CODE(L2CAP_EVENT_ECBM_INCOMING_CONNECTION);
        __ENUMERATE_CODE(L2CAP_EVENT_ECBM_CHANNEL_OPENED);
        __ENUMERATE_CODE(L2CAP_EVENT_ECBM_RECONFIGURED);
        __ENUMERATE_CODE(L2CAP_EVENT_ECBM_RECONFIGURATION_COMPLETE);
        __ENUMERATE_CODE(RFCOMM_EVENT_CHANNEL_OPENED);
        __ENUMERATE_CODE(RFCOMM_EVENT_CHANNEL_CLOSED);
        __ENUMERATE_CODE(RFCOMM_EVENT_INCOMING_CONNECTION);
        __ENUMERATE_CODE(RFCOMM_EVENT_REMOTE_LINE_STATUS);
        __ENUMERATE_CODE(RFCOMM_EVENT_REMOTE_MODEM_STATUS);
        __ENUMERATE_CODE(RFCOMM_EVENT_PORT_CONFIGURATION);
        __ENUMERATE_CODE(RFCOMM_EVENT_CAN_SEND_NOW);
        __ENUMERATE_CODE(SDP_EVENT_QUERY_COMPLETE);
        __ENUMERATE_CODE(SDP_EVENT_QUERY_RFCOMM_SERVICE);
        __ENUMERATE_CODE(SDP_EVENT_QUERY_ATTRIBUTE_BYTE);
        __ENUMERATE_CODE(SDP_EVENT_QUERY_ATTRIBUTE_VALUE);
        __ENUMERATE_CODE(SDP_EVENT_QUERY_SERVICE_RECORD_HANDLE);
        __ENUMERATE_CODE(GATT_EVENT_QUERY_COMPLETE);
        __ENUMERATE_CODE(GATT_EVENT_SERVICE_QUERY_RESULT);
        __ENUMERATE_CODE(GATT_EVENT_CHARACTERISTIC_QUERY_RESULT);
        __ENUMERATE_CODE(GATT_EVENT_INCLUDED_SERVICE_QUERY_RESULT);
        __ENUMERATE_CODE(GATT_EVENT_ALL_CHARACTERISTIC_DESCRIPTORS_QUERY_RESULT);
        __ENUMERATE_CODE(GATT_EVENT_CHARACTERISTIC_VALUE_QUERY_RESULT);
        __ENUMERATE_CODE(GATT_EVENT_LONG_CHARACTERISTIC_VALUE_QUERY_RESULT);
        __ENUMERATE_CODE(GATT_EVENT_NOTIFICATION);
        __ENUMERATE_CODE(GATT_EVENT_INDICATION);
        __ENUMERATE_CODE(GATT_EVENT_CHARACTERISTIC_DESCRIPTOR_QUERY_RESULT);
        __ENUMERATE_CODE(GATT_EVENT_LONG_CHARACTERISTIC_DESCRIPTOR_QUERY_RESULT);
        __ENUMERATE_CODE(GATT_EVENT_MTU);
        __ENUMERATE_CODE(GATT_EVENT_CAN_WRITE_WITHOUT_RESPONSE);
        __ENUMERATE_CODE(GATT_EVENT_CONNECTED);
        __ENUMERATE_CODE(GATT_EVENT_DISCONNECTED);
        __ENUMERATE_CODE(ATT_EVENT_CONNECTED);
        __ENUMERATE_CODE(ATT_EVENT_DISCONNECTED);
        __ENUMERATE_CODE(ATT_EVENT_MTU_EXCHANGE_COMPLETE);
        __ENUMERATE_CODE(ATT_EVENT_HANDLE_VALUE_INDICATION_COMPLETE);
        __ENUMERATE_CODE(ATT_EVENT_CAN_SEND_NOW);
        __ENUMERATE_CODE(BNEP_EVENT_SERVICE_REGISTERED);
        __ENUMERATE_CODE(BNEP_EVENT_CHANNEL_OPENED);
        __ENUMERATE_CODE(BNEP_EVENT_CHANNEL_CLOSED);
        __ENUMERATE_CODE(BNEP_EVENT_CHANNEL_TIMEOUT);
        __ENUMERATE_CODE(BNEP_EVENT_CAN_SEND_NOW);
        __ENUMERATE_CODE(SM_EVENT_JUST_WORKS_REQUEST);
        __ENUMERATE_CODE(SM_EVENT_PASSKEY_DISPLAY_NUMBER);
        __ENUMERATE_CODE(SM_EVENT_PASSKEY_DISPLAY_CANCEL);
        __ENUMERATE_CODE(SM_EVENT_PASSKEY_INPUT_NUMBER);
        __ENUMERATE_CODE(SM_EVENT_NUMERIC_COMPARISON_REQUEST);
        __ENUMERATE_CODE(SM_EVENT_IDENTITY_RESOLVING_STARTED);
        __ENUMERATE_CODE(SM_EVENT_IDENTITY_RESOLVING_FAILED);
        __ENUMERATE_CODE(SM_EVENT_IDENTITY_RESOLVING_SUCCEEDED);
        __ENUMERATE_CODE(SM_EVENT_AUTHORIZATION_REQUEST);
        __ENUMERATE_CODE(SM_EVENT_AUTHORIZATION_RESULT);
        __ENUMERATE_CODE(SM_EVENT_KEYPRESS_NOTIFICATION);
        __ENUMERATE_CODE(SM_EVENT_IDENTITY_CREATED);
        __ENUMERATE_CODE(SM_EVENT_PAIRING_STARTED);
        __ENUMERATE_CODE(SM_EVENT_PAIRING_COMPLETE);
        __ENUMERATE_CODE(SM_EVENT_REENCRYPTION_STARTED);
        __ENUMERATE_CODE(SM_EVENT_REENCRYPTION_COMPLETE);
        __ENUMERATE_CODE(GAP_EVENT_SECURITY_LEVEL);
        __ENUMERATE_CODE(GAP_EVENT_DEDICATED_BONDING_COMPLETED);
        __ENUMERATE_CODE(GAP_EVENT_ADVERTISING_REPORT);
        __ENUMERATE_CODE(GAP_EVENT_EXTENDED_ADVERTISING_REPORT);
        __ENUMERATE_CODE(GAP_EVENT_INQUIRY_RESULT);
        __ENUMERATE_CODE(GAP_EVENT_INQUIRY_COMPLETE);
        __ENUMERATE_CODE(GAP_EVENT_RSSI_MEASUREMENT);
        __ENUMERATE_CODE(GAP_EVENT_LOCAL_OOB_DATA);
        __ENUMERATE_CODE(GAP_EVENT_PAIRING_STARTED);
        __ENUMERATE_CODE(GAP_EVENT_PAIRING_COMPLETE);
        __ENUMERATE_CODE(HCI_EVENT_META_GAP);
        __ENUMERATE_CODE(HCI_EVENT_HSP_META);
        __ENUMERATE_CODE(HCI_EVENT_HFP_META);
        __ENUMERATE_CODE(HCI_EVENT_ANCS_META);
        __ENUMERATE_CODE(HCI_EVENT_AVDTP_META);
        __ENUMERATE_CODE(HCI_EVENT_AVRCP_META);
        __ENUMERATE_CODE(HCI_EVENT_GOEP_META);
        __ENUMERATE_CODE(HCI_EVENT_PBAP_META);
        __ENUMERATE_CODE(HCI_EVENT_HID_META);
        __ENUMERATE_CODE(HCI_EVENT_A2DP_META);
        __ENUMERATE_CODE(HCI_EVENT_HIDS_META);
        __ENUMERATE_CODE(HCI_EVENT_GATTSERVICE_META);
        __ENUMERATE_CODE(HCI_EVENT_BIP_META);
        __ENUMERATE_CODE(HCI_EVENT_MAP_META);
        __ENUMERATE_CODE(HCI_EVENT_MESH_META);
        __ENUMERATE_CODE(HCI_EVENT_VENDOR_SPECIFIC);
        default:
            return "EVENT_UNKNOWN";
    }
}

const char* bt_strlinktype(uint8_t link_type) {
    switch(link_type) {
        __ENUMERATE_CODE(HCI_LINK_TYPE_SCO);
        __ENUMERATE_CODE(HCI_LINK_TYPE_ACL);
        __ENUMERATE_CODE(HCI_LINK_TYPE_ESCO);
        default:
            return "LINK_TYPE_UNKNOWN";
    }
}

const char* bt_striocap(uint8_t io_capability) {
    switch(io_capability) {
        __ENUMERATE_CODE(IO_CAPABILITY_DISPLAY_ONLY);
        __ENUMERATE_CODE(IO_CAPABILITY_DISPLAY_YES_NO);
        __ENUMERATE_CODE(IO_CAPABILITY_KEYBOARD_ONLY);
        __ENUMERATE_CODE(IO_CAPABILITY_NO_INPUT_NO_OUTPUT);
        __ENUMERATE_CODE(IO_CAPABILITY_KEYBOARD_DISPLAY);
        default:
            return "IO_CAPABILITY_UNKNOWN";
    }
}

const char* bt_strhcistate(uint8_t state) {
    switch(state) {
        __ENUMERATE_CODE(HCI_STATE_OFF);
        __ENUMERATE_CODE(HCI_STATE_INITIALIZING);
        __ENUMERATE_CODE(HCI_STATE_WORKING);
        __ENUMERATE_CODE(HCI_STATE_HALTING);
        __ENUMERATE_CODE(HCI_STATE_SLEEPING);
        __ENUMERATE_CODE(HCI_STATE_FALLING_ASLEEP);
        default:
            return "HCI_STATE_UNKNOWN";
    }
}

const char* bt_strauthreq(uint8_t authreqs) {
    switch(authreqs) {
        __ENUMERATE_CODE(SSP_IO_AUTHREQ_MITM_PROTECTION_NOT_REQUIRED_NO_BONDING);
        __ENUMERATE_CODE(SSP_IO_AUTHREQ_MITM_PROTECTION_REQUIRED_NO_BONDING);
        __ENUMERATE_CODE(SSP_IO_AUTHREQ_MITM_PROTECTION_NOT_REQUIRED_DEDICATED_BONDING);
        __ENUMERATE_CODE(SSP_IO_AUTHREQ_MITM_PROTECTION_REQUIRED_DEDICATED_BONDING);
        __ENUMERATE_CODE(SSP_IO_AUTHREQ_MITM_PROTECTION_NOT_REQUIRED_GENERAL_BONDING);
        __ENUMERATE_CODE(SSP_IO_AUTHREQ_MITM_PROTECTION_REQUIRED_GENERAL_BONDING);
        default:
            return "SSP_IO_AUTHREQ_UNKNOWN";
    }
}

const char* bt_strhidsubevent(uint8_t subevent) {
    switch(subevent) {
        __ENUMERATE_CODE(HID_SUBEVENT_INCOMING_CONNECTION);
        __ENUMERATE_CODE(HID_SUBEVENT_CONNECTION_OPENED);
        __ENUMERATE_CODE(HID_SUBEVENT_CONNECTION_CLOSED);
        __ENUMERATE_CODE(HID_SUBEVENT_CAN_SEND_NOW);
        __ENUMERATE_CODE(HID_SUBEVENT_SUSPEND);
        __ENUMERATE_CODE(HID_SUBEVENT_EXIT_SUSPEND);
        __ENUMERATE_CODE(HID_SUBEVENT_VIRTUAL_CABLE_UNPLUG);
        __ENUMERATE_CODE(HID_SUBEVENT_GET_REPORT_RESPONSE);
        __ENUMERATE_CODE(HID_SUBEVENT_SET_REPORT_RESPONSE);
        __ENUMERATE_CODE(HID_SUBEVENT_GET_PROTOCOL_RESPONSE);
        __ENUMERATE_CODE(HID_SUBEVENT_SET_PROTOCOL_RESPONSE);
        __ENUMERATE_CODE(HID_SUBEVENT_REPORT);
        __ENUMERATE_CODE(HID_SUBEVENT_DESCRIPTOR_AVAILABLE);
        __ENUMERATE_CODE(HID_SUBEVENT_SNIFF_SUBRATING_PARAMS);
        default:
            return "HID_SUBEVENT_UNKNOWN";
    }
}

const char* bt_stropcode(uint16_t opcode) {
    switch(opcode) {
        __ENUMERATE_CODE(HCI_OPCODE_HCI_INQUIRY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_INQUIRY_CANCEL);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_PERIODIC_INQUIRY_MODE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_EXIT_PERIODIC_INQUIRY_MODE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_CREATE_CONNECTION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_DISCONNECT);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_CREATE_CONNECTION_CANCEL);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_ACCEPT_CONNECTION_REQUEST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_REJECT_CONNECTION_REQUEST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LINK_KEY_REQUEST_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LINK_KEY_REQUEST_NEGATIVE_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_PIN_CODE_REQUEST_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_PIN_CODE_REQUEST_NEGATIVE_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_CHANGE_CONNECTION_PACKET_TYPE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_AUTHENTICATION_REQUESTED);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_SET_CONNECTION_ENCRYPTION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_CHANGE_CONNECTION_LINK_KEY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_REMOTE_NAME_REQUEST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_REMOTE_NAME_REQUEST_CANCEL);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_REMOTE_SUPPORTED_FEATURES_COMMAND);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_REMOTE_EXTENDED_FEATURES_COMMAND);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_REMOTE_VERSION_INFORMATION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_SETUP_SYNCHRONOUS_CONNECTION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_ACCEPT_SYNCHRONOUS_CONNECTION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_IO_CAPABILITY_REQUEST_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_USER_CONFIRMATION_REQUEST_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_USER_CONFIRMATION_REQUEST_NEGATIVE_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_USER_PASSKEY_REQUEST_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_USER_PASSKEY_REQUEST_NEGATIVE_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_REMOTE_OOB_DATA_REQUEST_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_REMOTE_OOB_DATA_REQUEST_NEGATIVE_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_IO_CAPABILITY_REQUEST_NEGATIVE_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_ENHANCED_SETUP_SYNCHRONOUS_CONNECTION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_ENHANCED_ACCEPT_SYNCHRONOUS_CONNECTION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_REMOTE_OOB_EXTENDED_DATA_REQUEST_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_HOLD_MODE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_SNIFF_MODE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_EXIT_SNIFF_MODE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_PARK_STATE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_EXIT_PARK_STATE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_QOS_SETUP);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_ROLE_DISCOVERY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_SWITCH_ROLE_COMMAND);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_LINK_POLICY_SETTINGS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_LINK_POLICY_SETTINGS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_DEFAULT_LINK_POLICY_SETTING);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_FLOW_SPECIFICATION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_SNIFF_SUBRATING);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_SET_EVENT_MASK);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_RESET);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_FLUSH);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_PIN_TYPE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_PIN_TYPE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_DELETE_STORED_LINK_KEY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_LOCAL_NAME);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_LOCAL_NAME);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_PAGE_TIMEOUT);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_PAGE_TIMEOUT);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_SCAN_ENABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_PAGE_SCAN_ACTIVITY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_PAGE_SCAN_ACTIVITY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_INQUIRY_SCAN_ACTIVITY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_INQUIRY_SCAN_ACTIVITY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_AUTHENTICATION_ENABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_CLASS_OF_DEVICE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_AUTOMATIC_FLUSH_TIMEOUT);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_NUM_BROADCAST_RETRANSMISSIONS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_NUM_BROADCAST_RETRANSMISSIONS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_TRANSMIT_POWER_LEVEL);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_SYNCHRONOUS_FLOW_CONTROL_ENABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_SET_CONTROLLER_TO_HOST_FLOW_CONTROL);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_HOST_BUFFER_SIZE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_HOST_NUMBER_OF_COMPLETED_PACKETS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_LINK_SUPERVISION_TIMEOUT);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_LINK_SUPERVISION_TIMEOUT);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_CURRENT_IAC_LAP_TWO_IACS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_INQUIRY_SCAN_TYPE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_INQUIRY_SCAN_TYPE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_INQUIRY_MODE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_INQUIRY_MODE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_PAGE_SCAN_TYPE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_PAGE_SCAN_TYPE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_EXTENDED_INQUIRY_RESPONSE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_SIMPLE_PAIRING_MODE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_LOCAL_OOB_DATA);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_DEFAULT_ERRONEOUS_DATA_REPORTING);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_SET_EVENT_MASK_2);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_LE_HOST_SUPPORTED);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_LE_HOST_SUPPORTED);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_SECURE_CONNECTIONS_HOST_SUPPORT);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_LOCAL_EXTENDED_OOB_DATA);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_EXTENDED_PAGE_TIMEOUT);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_EXTENDED_PAGE_TIMEOUT);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_EXTENDED_INQUIRY_LENGTH);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_EXTENDED_INQUIRY_LENGTH);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_SET_ECOSYSTEM_BASE_INTERVAL);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_CONFIGURE_DATA_PATH);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_SET_MIN_ENCRYPTION_KEY_SIZE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_LOOPBACK_MODE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_LOOPBACK_MODE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_ENABLE_DEVICE_UNDER_TEST_MODE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_SIMPLE_PAIRING_DEBUG_MODE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_WRITE_SECURE_CONNECTIONS_TEST_MODE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_LOCAL_VERSION_INFORMATION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_LOCAL_SUPPORTED_COMMANDS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_LOCAL_SUPPORTED_FEATURES);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_BUFFER_SIZE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_BD_ADDR);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_RSSI);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_READ_ENCRYPTION_KEY_SIZE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_EVENT_MASK);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_BUFFER_SIZE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_LOCAL_SUPPORTED_FEATURES);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_RANDOM_ADDRESS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_ADVERTISING_PARAMETERS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_ADVERTISING_CHANNEL_TX_POWER);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_ADVERTISING_DATA);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_SCAN_RESPONSE_DATA);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_ADVERTISE_ENABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_SCAN_PARAMETERS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_SCAN_ENABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_CREATE_CONNECTION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_CREATE_CONNECTION_CANCEL);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_WHITE_LIST_SIZE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_CLEAR_WHITE_LIST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_ADD_DEVICE_TO_WHITE_LIST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_REMOVE_DEVICE_FROM_WHITE_LIST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_CONNECTION_UPDATE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_HOST_CHANNEL_CLASSIFICATION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_CHANNEL_MAP);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_REMOTE_USED_FEATURES);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_ENCRYPT);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_RAND);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_START_ENCRYPTION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_LONG_TERM_KEY_REQUEST_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_LONG_TERM_KEY_NEGATIVE_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_SUPPORTED_STATES);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_RECEIVER_TEST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_TRANSMITTER_TEST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_TEST_END);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_REMOTE_CONNECTION_PARAMETER_REQUEST_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_REMOTE_CONNECTION_PARAMETER_REQUEST_NEGATIVE_REPLY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_DATA_LENGTH);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_SUGGESTED_DEFAULT_DATA_LENGTH);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_WRITE_SUGGESTED_DEFAULT_DATA_LENGTH);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_LOCAL_P256_PUBLIC_KEY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_GENERATE_DHKEY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_ADD_DEVICE_TO_RESOLVING_LIST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_REMOVE_DEVICE_FROM_RESOLVING_LIST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_CLEAR_RESOLVING_LIST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_RESOLVING_LIST_SIZE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_PEER_RESOLVABLE_ADDRESS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_LOCAL_RESOLVABLE_ADDRESS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_ADDRESS_RESOLUTION_ENABLED);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_RESOLVABLE_PRIVATE_ADDRESS_TIMEOUT);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_MAXIMUM_DATA_LENGTH);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_PHY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_DEFAULT_PHY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_PHY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_RECEIVER_TEST_V2);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_TRANSMITTER_TEST_V2);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_ADVERTISING_SET_RANDOM_ADDRESS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_EXTENDED_ADVERTISING_PARAMETERS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_EXTENDED_ADVERTISING_DATA);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_EXTENDED_SCAN_RESPONSE_DATA);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_EXTENDED_ADVERTISING_ENABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_MAXIMUM_ADVERTISING_DATA_LENGTH);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_NUMBER_OF_SUPPORTED_ADVERTISING_SETS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_REMOVE_ADVERTISING_SET);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_CLEAR_ADVERTISING_SETS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_PERIODIC_ADVERTISING_PARAMETERS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_PERIODIC_ADVERTISING_DATA);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_PERIODIC_ADVERTISING_ENABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_EXTENDED_SCAN_PARAMETERS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_EXTENDED_SCAN_ENABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_EXTENDED_CREATE_CONNECTION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_PERIODIC_ADVERTISING_CREATE_SYNC);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_PERIODIC_ADVERTISING_CREATE_SYNC_CANCEL);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_PERIODIC_ADVERTISING_TERMINATE_SYNC);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_ADD_DEVICE_TO_PERIODIC_ADVERTISER_LIST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_REMOVE_DEVICE_FROM_PERIODIC_ADVERTISER_LIST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_CLEAR_PERIODIC_ADVERTISER_LIST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_PERIODIC_ADVERTISER_LIST_SIZE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_TRANSMIT_POWER);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_RF_PATH_COMPENSATION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_WRITE_RF_PATH_COMPENSATION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_PRIVACY_MODE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_RECEIVER_TEST_V3);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_TRANSMITTER_TEST_V3);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_CONNECTIONLESS_CTE_TRANSMIT_PARAMETERS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_CONNECTIONLESS_CTE_TRANSMIT_ENABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_CONNECTIONLESS_IQ_SAMPLING_ENABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_CONNECTION_CTE_RECEIVE_PARAMETERS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_CONNECTION_CTE_TRANSMIT_PARAMETERS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_CONNECTION_CTE_REQUEST_ENABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_CONNECTION_CTE_RESPONSE_ENABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_ANTENNA_INFORMATION);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_PERIODIC_ADVERTISING_RECEIVE_ENABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_PERIODIC_ADVERTISING_SYNC_TRANSFER);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_PERIODIC_ADVERTISING_SET_INFO_TRANSFER);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_PERIODIC_ADVERTISING_SYNC_TRANSFER_PARAMETERS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_DEFAULT_PERIODIC_ADVERTISING_SYNC_TRANSFER_PARAMETERS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_GENERATE_DHKEY_V2);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_MODIFY_SLEEP_CLOCK_ACCURACY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_BUFFER_SIZE_V2);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_ISO_TX_SYNC);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_CIG_PARAMETERS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_CIG_PARAMETERS_TEST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_CREATE_CIS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_REMOVE_CIG);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_ACCEPT_CIS_REQUEST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_REJECT_CIS_REQUEST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_CREATE_BIG);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_CREATE_BIG_TEST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_TERMINATE_BIG);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_BIG_CREATE_SYNC);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_BIG_TERMINATE_SYNC);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_REQUEST_PEER_SCA);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SETUP_ISO_DATA_PATH);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_REMOVE_ISO_DATA_PATH);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_ISO_TRANSMIT_TEST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_ISO_RECEIVE_TEST);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_ISO_READ_TEST_COUNTERS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_ISO_TEST_END);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_HOST_FEATURE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_ISO_LINK_QUALITY);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_ENHANCED_READ_TRANSMIT_POWER_LEVEL);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_READ_REMOTE_TRANSMIT_POWER_LEVEL);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_PATH_LOSS_REPORTING_PARAMETERS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_PATH_LOSS_REPORTING_ENABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_SET_TRANSMIT_POWER_REPORTING_ENABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_LE_TRANSMITTER_TEST_V4);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_BCM_WRITE_SCO_PCM_INT);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_BCM_SET_SLEEP_MODE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_BCM_WRITE_I2SPCM_INTERFACE_PARAM);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_BCM_ENABLE_WBS);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_BCM_WRITE_TX_POWER_TABLE);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_BCM_SET_TX_PWR);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_TI_VS_CONFIGURE_DDIP);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_RTK_CONFIGURE_SCO_ROUTING);
        __ENUMERATE_CODE(HCI_OPCODE_HCI_RTK_READ_CARD_INFO);
        default:
            return "OPCODE_UNKNOWN";
    }
}

#undef __ENUMERATE_CODE